package apiserve

import (
	"fmt"
	"log"
	"net/http"
	"os"

	"github.com/gin-gonic/gin"
)

type ApiHandler struct {
	Port     string
	FileName string
}

/* Function reads random number generated by module */
func (t *ApiHandler) ReadFromModule() (int, error) {
	data, err := os.ReadFile(t.FileName)
	if err != nil {
		log.Printf("Failed to read from %s: %v", t.FileName, err)
		return 0, err
	}

	var randomNumber int
	_, err = fmt.Sscanf(string(data), "%d", &randomNumber)
	if err != nil {
		log.Printf("Failed to parse random number: %v", err)
		return 0, err
	}

	return randomNumber, nil
}

/* Handler function for /randnumber endpoint */
func (t *ApiHandler) getRandomNumber(c *gin.Context) {
	randomNumber, err := t.ReadFromModule()
	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{
			"error": "Failed to read from kernel module",
		})
		return
	}

	c.JSON(http.StatusOK, gin.H{
		"randomNumber": randomNumber,
	})
}

/* Serves REST API on specified port */
func (t *ApiHandler) HandleRequests() {
	router := gin.Default()
	router.GET("/randnumber", t.getRandomNumber)

	fmt.Printf("Server started on port %s...\n", t.Port)
	err := router.Run(":" + t.Port)
	if err != nil {
		fmt.Println("Error starting server: ", err)
	}
}
